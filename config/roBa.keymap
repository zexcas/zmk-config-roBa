#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LA(GRAVE) ESCAPE           &mt F6 W  &mt F7 E      &mt F10 R                    &mt F8 T                                                &mt F1 Y        &kp U            &kp I  &kp O        &kp P
&kp A                          &mt F5 S  &mt F4 D      &mt F3 F                     &mt F2 F   &kp KP_N0       &kp MINUS                    &kp UP_ARROW    &kp H            &kp K  &lt 5 ENTER  &kp J
&kp LEFT_SHIFT                 &kp Z     &kp X         &kp C                        &mt V B    &kp N           &kp LEFT_ARROW               &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp M  &mt Q L      &mt PERIOD COMMA
&lt_to_layer_0 2 LEFT_CONTROL  &kp TAB   &kp LEFT_ALT  &lt_to_layer_0 1 LEFT_SHIFT  &kp SPACE  &kp DELETE      &lt_to_layer_0 1 LEFT_SHIFT  &kp BACKSPACE                                        &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp KP_PLUS KP_MINUS>;
        };

        TenKey {
            bindings = <
&trans  &trans  &trans  &trans  &trans                               &kp KP_NUMBER_1  &kp KP_NUMBER_2    &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5
&trans  &trans  &trans  &trans  &trans  &trans      &kp KP_NUMBER_0  &kp PG_UP        &kp KP_NUMBER_6    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9
&trans  &trans  &trans  &trans  &trans  &trans      &kp LC(PAGE_UP)  &kp PAGE_DOWN    &kp LC(PAGE_DOWN)  &kp PLUS         &kp SLASH        &mt SEMICOLON COLON
&trans  &trans  &trans  &trans  &trans  &trans      &trans           &trans                                                                &kp KP_EQUAL
            >;
        };

        Ctrl {
            bindings = <
&kp MINUS  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)                                               &kp LC(NUMBER_1)  &kp LC(U)          &kp LC(N5)            &kp LEFT_PARENTHESIS  &kp LC(P)
&kp LC(A)  &kp LC(Y)  &none      &kp LC(F)  &kp LC(B)  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &trans            &kp LC(H)          &mt LC(S) LEFT_SHIFT  &kp DOLLAR            &kp PERCENT
&trans     &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(N)                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE       &kp BACKSLASH
&trans     &trans     &trans     &trans     &trans     &trans                       &trans          &trans                                                                           &kp PIPE
            >;
        };

        xxxAlt {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &trans  &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans         &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &sl 6   &trans  &kp PAGE_UP    &trans           &trans  &kp LC(PAGE_DOWN)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp PAGE_DOWN  &kp LC(PAGE_UP)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                          &trans
            >;
        };

        layer_6 {
            bindings = <
&bootloader  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans       &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
